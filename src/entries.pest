WHITESPACE = _{ WHITE_SPACE }

ident = @{ XID_START ~ XID_CONTINUE* }
union = {   item ~ ("|" ~ item)*  }
map = {  "{" ~ "[" ~ "key" ~ ":" ~ key ~ "]" ~ ":" ~ expr ~ "}" }
str = {  "{" ~ (ident ~ ":" ~ expr)? ~ ("," ~ ident ~ ":" ~ expr )* ~ "}" }
tuple = { "[" ~ expr ~ ("," ~ expr )* ~ "]" }
key = { "number" | "string" }
typ = { "number" | "object" | "string" | "boolean" | "null" | hash  }
singleton = { str | map | tuple | typ | "(" ~ union ~ ")" }
hash = { "#" ~  ident }
array = { "[]"* }
item = { singleton ~ array  }
expr = { union | "(" ~ expr ~ ")" }
typescript = { SOI ~ expr  ~ EOI }



lhs = { "::"? ~ ident ~ ("::" ~ ident)*  }
generics = { "<" ~ ident ~ ("," ~ ident)* ~ ">" }

ll = _{ lhs ~ ("|" ~ lhs)* }
lhslist = { ll | "(" ~ ll ~ ")" }
entry = { lhslist ~ generics? ~ "=>" ~ expr }
entrylist = { entry ~ (";"? ~ entry )* }
markup = { SOI ~ entrylist  ~ EOI }
